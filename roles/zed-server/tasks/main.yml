---
# tasks file for zed-server
- name: add zed lake group
  ansible.builtin.group:
    name: "{{ zed_lake_group }}"
    state: present
  with_items: 
    - "{{ zed_lake_group }}"
    - "{{ zed_worker_group }}"
- name: create zed lake user
  ansible.builtin.user:
    name: "{{ zed_lake_user }}"
    group: "{{ zed_lake_group }}"
    groups: "{{ zed_lake_group }}"
    shell: /bin/bash
    state: present
- name: Create the zed lake directory if it does not exist
  ansible.builtin.file:
    path: "{{ zed_lake_path }}"
    state: directory
    recurse: yes
    owner: "{{ zed_lake_user }}"
    group: "{{ zed_lake_group }}"
    mode: '0770'
- name: create zed lake script directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ zed_lake_user }}"
    group: "{{ zed_lake_group }}"
    mode: '0770'
  with_items:
    - "{{ zed_lake_scripts_path }}"



- name: install packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
  - tmux

- name: if zed lake directory is empty, initialize zed lake
  ansible.builtin.command: zed init {{ zed_lake_path }}
  become_user: "{{ zed_lake_user }}"
  args:
    creates: "{{ zed_lake_path }}/lake.zng"

- name: if pcap_pool_created does not exist in zed lake, create it
  ansible.builtin.command: zed -lake {{ zed_lake_path }} create {{ zed_pool }}
  become_user: "{{ zed_lake_user }}"
  args:
    creates: "{{ zed_lake_path }}/pcap_pool_created"

- name: create file in zed lake
  ansible.builtin.command: touch {{ zed_lake_path }}/pcap_pool_created
  become_user: "{{ zed_lake_user }}"
  args:
    creates: "{{ zed_lake_path }}/pcap_pool_created"

- name: create zed_lake_watchdog script
  ansible.builtin.template:
    src: zed_lake_watchdog.sh.j2
    dest: "{{ zed_lake_scripts_path }}/zed_lake_watchdog.sh"
    owner: "{{ zed_lake_user }}"
    group: "{{ zed_lake_group }}"
    mode: '0750'
  
- name: cron job to launch zed lake watchdog
  ansible.builtin.cron:
    name: "zed lake watchdog"
    minute: "*"
    job: "{{ zed_lake_scripts_path }}/zed_lake_watchdog.sh"
    user: "{{ zed_lake_user }}"
    state: present


# - name: set bash shell for cron
#   ansible.builtin.cron:
#     name: SHELL
#     user: "{{ zed_lake_user }}"
#     env: yes
#     job: /bin/bash

# - name: launch zed lake server
#   ansible.builtin.cron:
#     name: launch zed lake server
#     user: "{{ zed_lake_user }}"
#     special_time: reboot
#     job: tmux new-session -d -s zed_lake && tmux set-option -t zed_lake remain-on-exit on && tmux new-window -d -n 'zed_lake_server' -t zed_lake:1 'zed serve -lake {{ zed_lake_path }}'
